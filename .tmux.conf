# example: /usr/share/doc/tmux/examples/
# {{{ screen-keys.conf
# $Id: screen-keys.conf,v 1.7 2010/07/31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.

# Set the prefix to ^A.
unbind C-b
set -g prefix ^A
bind a send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

unbind ^K
bind ^K confirm kill-pane

# screen ^C c
unbind ^C
bind ^C new-window -c "#{pane_current_path}"
unbind c
bind c new-window -c "#{pane_current_path}"

# kill window
unbind X
bind X confirm kill-window

# respawn window
unbind R
bind R respawn-window

# detach ^D d
unbind ^D
bind ^D detach

# displays *
unbind *
bind * list-clients

# next ^@ ^N sp n
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^?
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \
unbind \
bind \ confirm-before "kill-server"

# kill K k
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# split -v |
unbind |
bind | split-window

# :kB: focus up
unbind Tab
bind Tab select-pane -t:.+
unbind BTab
bind BTab select-pane -t:.-

# " windowlist -b
unbind '"'
bind '"' choose-window
# }}}
# {{{ vim-keys.conf
# $Id: vim-keys.conf,v 1.2 2010/09/18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind = resize-pane -U 10

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# open a man page in new window
bind / command-prompt "split-window 'exec man %%'"

# quick view of processes
bind ` split-window "exec htop"

# xterm-style function key sequences
setw -g xterm-keys on

# enable mouse selection in copy mode
#setw -g mode-mouse off
#set -g mouse-resize-pane on
#set -g mouse-select-pane on
#set -g mouse-select-window on

# vi-style controls for copy mode
setw -g mode-keys vi
# }}}

set -g default-terminal "screen-256color" # + "tmux -2" => 256 color
set -g status-justify left
set -g status-interval 15 # 15 sec refresh
set -g display-time 5000
set -g repeat-time 1000
set -g history-limit 5000
set -g status-keys vi
set -g status-bg black
set -g status-fg white
# set -g status-utf8 on
set -g status-justify left
set -g status-interval 1
set -g status-left-length 20
set -g status-right-length 85
#set -g status-left "#[fg=white,bg=blue] > #I #W < #[default] |" # 0:bash
set -g status-left "##[fg=yellow,bright,bg=blue] #S #[default] | " # session-name
set -g status-right "#[fg=red,bright][ #[fg=cyan]#H #[fg=red]]#[default] #[fg=yellow,bright]- %Y.%m.%d #[fg=green]%H:%M #[default]#[fg=magenta,bright](load: #(sysctl -n vm.loadavg | cut -d \" \" -f 2,3,4))#[default]"

# setw -g utf8 on
setw -g window-status-format " #I$ #W "
setw -g window-status-current-format " #I$ #W "
setw -g window-status-style bg=blue,fg=yellow
setw -g window-status-current-style bg=yellow,fg=blue
# setw -g window-status-current-fg blue
# setw -g window-status-current-bg yellow
# setw -g window-status-current-attr default # bright

# Using tmux in MAC OSX Terminal
# set-option -g default-command "reattach-to-user-namespace -l $SHELL"
#bind C-c run "tmux show-buffer | reattach-to-user-namespace pbcopy"
#bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# set -s escape-time 0
# set-option -s repeat-time 200
