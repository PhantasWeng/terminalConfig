# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# My plugins
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# Set the prefix to ^A.
unbind C-b
set -g prefix ^A
bind a send-prefix

# screen ^C c
unbind ^C
bind ^C new-window -c "#{pane_current_path}"
unbind c
bind c new-window -c "#{pane_current_path}"

# next ^@ ^N sp n
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# other ^A
unbind ^A
bind ^A last-window

# split -v |
unbind |
bind | split-window

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 5 
bind > resize-pane -R 5 
bind - resize-pane -D 5 
bind = resize-pane -U 5 

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# open a man page in new window
bind / command-prompt "split-window 'exec man %%'"

# quick view of processes
bind ` split-window "exec htop"

# xterm-style function key sequences
setw -g xterm-keys on

# enable mouse selection in copy mode
set -g mouse off
# set -g mouse-resize-pane on
#set -g mouse-select-pane on
#set -g mouse-select-window on

# vi-style controls for copy mode
setw -g mode-keys vi
# }}}

set -g default-terminal "screen-256color" # + "tmux -2" => 256 color
set -g status-justify left
set -g status-interval 15 # 15 sec refresh
set -g display-panes-colour brightwhite
set -g display-panes-time 3000
set -g display-time 3000
set -g repeat-time 1000
set -g history-limit 5000
set -g status-keys vi
set -g status-bg black
set -g status-fg white
# set -g status-utf8 on
set -g status-justify left
set -g status-interval 1
set -g status-left-length 20
set -g status-right-length 85
#set -g status-left "#[fg=white,bg=blue] > #I #W < #[default] |" # 0:bash
set -g status-left "##[fg=yellow,bright,bg=red] #S #[default]" # session-name
set -g status-right "#[fg=red,bright][ #[fg=cyan]#H #[fg=red]]#[default] #[fg=yellow,bright]- %Y.%m.%d #[fg=green]%H:%M #[default]#[fg=magenta,bright](load: #(sysctl -n vm.loadavg | cut -d \" \" -f 2,3,4))#[default]"

setw -g allow-rename off

# setw -g utf8 on
setw -g window-status-format " #I$ #W "
setw -g window-status-current-format " #I$ #W "
setw -g window-status-style bg=blue,fg=red
setw -g window-status-current-style bg=red,fg=white,bright
# setw -g window-status-current-fg blue
# setw -g window-status-current-bg yellow
# setw -g window-status-current-attr default # bright

# Using tmux in MAC OSX Terminal
# set-option -g default-command "reattach-to-user-namespace -l $SHELL"
#bind C-c run "tmux show-buffer | reattach-to-user-namespace pbcopy"
#bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# set -s escape-time 0
# set-option -s repeat-time 200
bind -n C-k send-keys -R C-l \; clear-history
